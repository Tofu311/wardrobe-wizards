name: Deploy to DigitalOcean

on:
  push:
    branches:
      - main
    paths:
      - "frontend/**"
      - "api/**"

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "18"

      - name: Build backend Docker image
        run: |
          docker build -t mbruckert/wardrobe-wizard-backend:latest -f api/Dockerfile api/

      - name: Build frontend Docker image
        run: |
          docker build -t mbruckert/wardrobe-wizard-frontend:latest -f frontend/Dockerfile frontend/

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push backend Docker image
        run: docker push mbruckert/wardrobe-wizard-backend:latest

      - name: Push frontend Docker image
        run: docker push mbruckert/wardrobe-wizard-frontend:latest

      - name: Deploy to DigitalOcean
        env:
          HOST: ${{ secrets.DROPLET_IP }}
          USER: root
          PASSWORD: ${{ secrets.DROPLET_PASSWORD }}
        run: |
          # Export environment variables
          export OPENAI_API_KEY="${{ secrets.OPENAI_API_KEY }}"
          export REMOVE_BG_API_KEY="${{ secrets.REMOVE_BG_API_KEY }}"
          export DATABASE_URL="${{ secrets.DATABASE_URL }}"
          export JWT_SECRET="${{ secrets.JWT_SECRET }}"
          export WEATHER_API_KEY="${{ secrets.WEATHER_API_KEY }}"
          export SPACES_ENDPOINT="${{ secrets.SPACES_ENDPOINT }}"
          export DIGITAL_OCEAN_ACCESS_KEY="${{ secrets.DIGITAL_OCEAN_ACCESS_KEY }}"
          export DIGITAL_OCEAN_SECRET_KEY="${{ secrets.DIGITAL_OCEAN_SECRET_KEY }}"

          # Verify variables are set
          echo "OPENAI_API_KEY is set"
          echo "REMOVE_BG_API_KEY is set"
          echo "DATABASE_URL is set"
          echo "JWT_SECRET is set"
          echo "WEATHER_API_KEY is set"
          echo "SPACES_ENDPOINT is set"
          echo "DIGITAL_OCEAN_ACCESS_KEY is set"
          echo "DIGITAL_OCEAN_SECRET_KEY is set"

          # SSH into the server and execute commands
          sshpass -p "$PASSWORD" ssh -o StrictHostKeyChecking=no "$USER@$HOST" << EOF
            # Pull the latest Docker images
            docker pull mbruckert/wardrobe-wizard-backend:latest
            docker pull mbruckert/wardrobe-wizard-frontend:latest

            # Stop and remove existing containers if they exist
            docker stop backend || true && docker rm backend || true
            docker stop frontend || true && docker rm frontend || true

            # Run the backend container
            docker run -d --name backend -p 3000:3000 \
              -e OPENAI_API_KEY="$OPENAI_API_KEY" \
              -e REMOVE_BG_API_KEY="$REMOVE_BG_API_KEY" \
              -e DATABASE_URL="$DATABASE_URL" \
              -e JWT_SECRET="$JWT_SECRET" \
              -e WEATHER_API_KEY="$WEATHER_API_KEY" \
              -e SPACES_ENDPOINT="$SPACES_ENDPOINT" \
              -e DIGITAL_OCEAN_ACCESS_KEY="$DIGITAL_OCEAN_ACCESS_KEY" \
              -e DIGITAL_OCEAN_SECRET_KEY="$DIGITAL_OCEAN_SECRET_KEY" \
              mbruckert/wardrobe-wizard-backend:latest

            # Run the frontend container
            docker run -d --name frontend -p 8080:80 mbruckert/wardrobe-wizard-frontend:latest
          EOF
